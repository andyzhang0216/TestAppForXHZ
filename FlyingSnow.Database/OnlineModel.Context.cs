//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlyingSnow.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Contract.Online;

    public partial class OnlineDBContext : DbContext
    {
        public OnlineDBContext()
            : base("name=OnlineEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<t_ChangeIp> t_ChangeIp { get; set; }
        public virtual DbSet<Online> Onlines { get; set; }
        public virtual DbSet<t_validateLog> t_validateLog { get; set; }
    
        public virtual int del_validateLog()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("del_validateLog");
        }
    
        public virtual int pro_OnlineSet(string accounts, string iP, Nullable<int> status, Nullable<System.DateTime> dateTime)
        {
            var accountsParameter = accounts != null ?
                new ObjectParameter("Accounts", accounts) :
                new ObjectParameter("Accounts", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pro_OnlineSet", accountsParameter, iPParameter, statusParameter, dateTimeParameter);
        }
    
        public virtual int pro_OnlineTimeNow_up(string accounts)
        {
            var accountsParameter = accounts != null ?
                new ObjectParameter("Accounts", accounts) :
                new ObjectParameter("Accounts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pro_OnlineTimeNow_up", accountsParameter);
        }
    }
}
